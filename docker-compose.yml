version: '3'

networks:
    laravel:

services:
    app:
        build:
            context: ./dockerfiles
            dockerfile: nginx.dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
        ports:
            - "8878:80"
        volumes:
            - ./:/var/www/html:delegated
        depends_on:
            - php
            - redis
            - mysql
            - mailhog
        networks:
            - laravel

    mysql:
        image: mysql:8.0
        restart: unless-stopped
        tty: true
        ports:
            - "8109:3306"
        volumes:
            - ./mysql:/var/lib/mysql
        environment:
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        networks:
            - laravel

    mysql-test:
        image: mysql:8.0
        ports:
            - "8111:3306"
        environment:
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql-test
        networks:
            - laravel

    php:
        build:
            context: ./dockerfiles
            dockerfile: php.dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
        ports:
            - "9000:9000"
        volumes:
            - ./:/var/www/html:delegated
        networks:
            - laravel

    redis:
        image: redis:alpine
        restart: unless-stopped
        ports:
            - "6379:6379"
        networks:
            - laravel

    composer:
        build:
            context: ./dockerfiles
            dockerfile: php.dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
        volumes:
            - ./:/var/www/html
        depends_on:
            - php
        entrypoint: [ 'composer', '--ignore-platform-reqs' ]
        networks:
            - laravel

    artisan:
        build:
            context: ./dockerfiles
            dockerfile: php.dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
        volumes:
            - ./:/var/www/html:delegated
        depends_on:
            - mysql
        entrypoint: [ 'php', '/var/www/html/artisan' ]
        networks:
            - laravel

    mailhog:
        image: mailhog/mailhog:latest
        ports:
            - "1025:1025"
            - "8025:8025"
        networks:
            - laravel

    mongo:
        image: mongo
        container_name: mongo
        environment:
            - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
            - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
        restart: unless-stopped
        ports:
            - "27017:27017"
        volumes:
            - ./storage/docker/mongodb/db:/data/db
            - ./storage/docker/mongodb/dev.archive:/Databases/dev.archive
            - ./storage/docker/mongodb/production:/Databases/production
        networks:
            laravel:

    elasticsearch:
        image: bitnami/elasticsearch:latest
        container_name: elasticsearch
        environment:
            - discovery.type=single-node
            - xpack.security.enabled=false
        ports:
            - "9200:9200"
            - "9300:9300"
        volumes:
            - ./storage/docker/elastic:/usr/share/elasticsearch/data
        networks:
            laravel:
